/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 optimized-room.glb 
*/

import React, { useRef, useState } from "react";
import { useGLTF, useTexture } from "@react-three/drei";
import { EffectComposer, SelectiveBloom } from "@react-three/postprocessing";
import { BlendFunction } from "postprocessing";
import * as THREE from "three";

export function Room() {
  const { nodes, materials } = useGLTF("/models/optimized-room.glb");
  const matcapTexture = useTexture("/images/textures/mat1.png");

  const [CurtinPosition, setCurtinPosition] = useState(1);
  const [chairPosition, setChairPosition] = useState([0, 0, 0]);
  const [screenSize, setScreenSize] = useState(1);

  const screensRef = useRef()
  const chairRef = useRef()
  const computerRef = useRef()

  const handleChairClick = (e) => {
    e.stopPropagation();
    // onChairClick();
    setChairPosition(prev =>
      prev[2] === 0 ? [0, 0, -0.5] : [0, 0, 0]
    );
    setTimeout(() => {setChairPosition(prev =>
      prev[2] === 0 ? [0, 0, -0.5] : [0, 0, 0])}, 900);
  };

  const handleComputerClick = (e) => {
    e.stopPropagation();
    // onComputerClick();
    setScreenSize([1.1, 1, 1.1]);
    setTimeout(() => setScreenSize([1, 1, 1]), 900);
  };

  const handleCurtin = (e) => {
    e.stopPropagation();
    // onHandleCurtin();
    setCurtinPosition([1, 1, -1]);
    setTimeout(() => setCurtinPosition([1, 1, 1]), 900);
  };

  const curtainMaterial = new THREE.MeshPhongMaterial({
    // color: "#d90429",
    color: '#8338ec',
  });

  const bodyMaterial = new THREE.MeshPhongMaterial({
    map: matcapTexture,
  });

  const tableMaterial = new THREE.MeshPhongMaterial({
    color: '#c2a88d'
  });

  const radiatorMaterial = new THREE.MeshPhongMaterial({
    color: "#fff",
  });

  const compMaterial = new THREE.MeshStandardMaterial({
    color: "#fff",
  });

  const pillowMaterial = new THREE.MeshPhongMaterial({
    color: "#8338ec",
  });

  const chairMaterial = new THREE.MeshPhongMaterial({
    color: "#000",
  });

  return (
    <group dispose={null}>
      <EffectComposer>
        <SelectiveBloom
          selection={screensRef}
          radius={0.8}
          intensity={0.8} // Strength of the bloom
          luminanceThreshold={0.3} // Minimum luminance needed
          luminanceSmoothing={0.9} // Smooth transition
          blendFunction={BlendFunction.ADD} // How it blends
        />
      </EffectComposer>
      <mesh
        onClick={handleCurtin}
        scale={CurtinPosition}
        geometry={nodes._________6_blinn1_0.geometry}
        material={curtainMaterial}
      />
      <mesh geometry={nodes.body1_blinn1_0.geometry} material={bodyMaterial} />
      <mesh geometry={nodes.cabin_blinn1_0.geometry} material={tableMaterial} />
      {/* functional chair */}
      <mesh
        ref={chairRef}
        geometry={nodes.chair_body_blinn1_0.geometry}
        position={chairPosition}
        onClick={handleChairClick}
        material={chairMaterial}
      />
      <mesh
        geometry={nodes.pillows_blinn1_0.geometry}
        position={chairPosition}
        material={pillowMaterial}
      />
      {/* functional computer screen mnitor */}
      <mesh
        ref={computerRef}
        geometry={nodes.comp_blinn1_0.geometry}

        material={compMaterial} />
      <mesh
        ref={screensRef}
        scale={screenSize}
        onClick={handleComputerClick}
        geometry={nodes.emis_lambert1_0.geometry}
        material={materials.lambert1}
      />
      <mesh
        scale={screenSize}
        geometry={nodes.monitor2_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        scale={screenSize}
        geometry={nodes.monitor3_blinn1_0.geometry}
        material={materials.blinn1}
      />

      <mesh
        geometry={nodes.handls_blinn1_0.geometry}
        onClick={() => alert('handle')}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.keyboard_blinn1_0.geometry}
        onClick={() => alert('keybord')}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.kovrik_blinn1_0.geometry}
        onClick={() => alert('kovrik')}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.lamp_bl_blinn1_0.geometry}
        scale={screenSize}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.lamp_white_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.miuse_blinn1_0.geometry}
        material={materials.blinn1}
      />

      <mesh
        geometry={nodes.pCylinder5_blinn1_0.geometry}
        material={materials.blinn1}
      />

      <mesh
        geometry={nodes.polySurface53_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.radiator_blinn1_0.geometry}
        material={radiatorMaterial}
      />
      <mesh
        geometry={nodes.radiator_blinn1_0001.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.railing_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.red_bttns_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.red_vac_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.stylus_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh geometry={nodes.table_blinn1_0.geometry} material={tableMaterial} />
      <mesh
        geometry={nodes.tablet_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.triangle_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.vac_black_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.vacuum1_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.vacuumgrey_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.vires_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.window_blinn1_0.geometry}
        material={materials.blinn1}
      />
      <mesh
        geometry={nodes.window4_phong1_0.geometry}
        material={materials.phong1}
      />
    </group>
  );
}

useGLTF.preload("/models/optimized-room.glb");
